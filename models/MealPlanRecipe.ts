/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { KeywordLabel } from './KeywordLabel';
import {
    KeywordLabelFromJSON,
    KeywordLabelFromJSONTyped,
    KeywordLabelToJSON,
} from './KeywordLabel';

/**
 * 
 * @export
 * @interface MealPlanRecipe
 */
export interface MealPlanRecipe {
    /**
     * 
     * @type {number}
     * @memberof MealPlanRecipe
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof MealPlanRecipe
     */
    readonly name: string;
    /**
     * 
     * @type {string}
     * @memberof MealPlanRecipe
     */
    readonly description: string | null;
    /**
     * 
     * @type {string}
     * @memberof MealPlanRecipe
     */
    readonly image: string | null;
    /**
     * 
     * @type {Array<KeywordLabel>}
     * @memberof MealPlanRecipe
     */
    readonly keywords: Array<KeywordLabel>;
    /**
     * 
     * @type {number}
     * @memberof MealPlanRecipe
     */
    readonly workingTime: number;
    /**
     * 
     * @type {number}
     * @memberof MealPlanRecipe
     */
    readonly waitingTime: number;
    /**
     * 
     * @type {number}
     * @memberof MealPlanRecipe
     */
    readonly createdBy: number;
    /**
     * 
     * @type {Date}
     * @memberof MealPlanRecipe
     */
    readonly createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof MealPlanRecipe
     */
    readonly updatedAt: Date;
    /**
     * 
     * @type {boolean}
     * @memberof MealPlanRecipe
     */
    readonly internal: boolean;
    /**
     * 
     * @type {number}
     * @memberof MealPlanRecipe
     */
    readonly servings: number;
    /**
     * 
     * @type {string}
     * @memberof MealPlanRecipe
     */
    readonly servingsText: string;
    /**
     * 
     * @type {number}
     * @memberof MealPlanRecipe
     */
    readonly rating: number | null;
    /**
     * 
     * @type {Date}
     * @memberof MealPlanRecipe
     */
    readonly lastCooked: Date | null;
    /**
     * 
     * @type {boolean}
     * @memberof MealPlanRecipe
     */
    readonly _new: boolean;
    /**
     * 
     * @type {string}
     * @memberof MealPlanRecipe
     */
    readonly recent: string;
}

/**
 * Check if a given object implements the MealPlanRecipe interface.
 */
export function instanceOfMealPlanRecipe(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "description" in value;
    isInstance = isInstance && "image" in value;
    isInstance = isInstance && "keywords" in value;
    isInstance = isInstance && "workingTime" in value;
    isInstance = isInstance && "waitingTime" in value;
    isInstance = isInstance && "createdBy" in value;
    isInstance = isInstance && "createdAt" in value;
    isInstance = isInstance && "updatedAt" in value;
    isInstance = isInstance && "internal" in value;
    isInstance = isInstance && "servings" in value;
    isInstance = isInstance && "servingsText" in value;
    isInstance = isInstance && "rating" in value;
    isInstance = isInstance && "lastCooked" in value;
    isInstance = isInstance && "_new" in value;
    isInstance = isInstance && "recent" in value;

    return isInstance;
}

export function MealPlanRecipeFromJSON(json: any): MealPlanRecipe {
    return MealPlanRecipeFromJSONTyped(json, false);
}

export function MealPlanRecipeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MealPlanRecipe {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': json['description'],
        'image': json['image'],
        'keywords': ((json['keywords'] as Array<any>).map(KeywordLabelFromJSON)),
        'workingTime': json['working_time'],
        'waitingTime': json['waiting_time'],
        'createdBy': json['created_by'],
        'createdAt': (new Date(json['created_at'])),
        'updatedAt': (new Date(json['updated_at'])),
        'internal': json['internal'],
        'servings': json['servings'],
        'servingsText': json['servings_text'],
        'rating': json['rating'],
        'lastCooked': (json['last_cooked'] === null ? null : new Date(json['last_cooked'])),
        '_new': json['new'],
        'recent': json['recent'],
    };
}

export function MealPlanRecipeToJSON(value?: MealPlanRecipe | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
    };
}

