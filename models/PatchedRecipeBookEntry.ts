/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { RecipeBook } from './RecipeBook';
import {
    RecipeBookFromJSON,
    RecipeBookFromJSONTyped,
    RecipeBookToJSON,
} from './RecipeBook';
import type { RecipeOverview } from './RecipeOverview';
import {
    RecipeOverviewFromJSON,
    RecipeOverviewFromJSONTyped,
    RecipeOverviewToJSON,
} from './RecipeOverview';

/**
 * 
 * @export
 * @interface PatchedRecipeBookEntry
 */
export interface PatchedRecipeBookEntry {
    /**
     * 
     * @type {number}
     * @memberof PatchedRecipeBookEntry
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedRecipeBookEntry
     */
    book?: number;
    /**
     * 
     * @type {RecipeBook}
     * @memberof PatchedRecipeBookEntry
     */
    readonly bookContent?: RecipeBook;
    /**
     * 
     * @type {number}
     * @memberof PatchedRecipeBookEntry
     */
    recipe?: number;
    /**
     * 
     * @type {RecipeOverview}
     * @memberof PatchedRecipeBookEntry
     */
    readonly recipeContent?: RecipeOverview;
}

/**
 * Check if a given object implements the PatchedRecipeBookEntry interface.
 */
export function instanceOfPatchedRecipeBookEntry(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedRecipeBookEntryFromJSON(json: any): PatchedRecipeBookEntry {
    return PatchedRecipeBookEntryFromJSONTyped(json, false);
}

export function PatchedRecipeBookEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedRecipeBookEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'book': !exists(json, 'book') ? undefined : json['book'],
        'bookContent': !exists(json, 'book_content') ? undefined : RecipeBookFromJSON(json['book_content']),
        'recipe': !exists(json, 'recipe') ? undefined : json['recipe'],
        'recipeContent': !exists(json, 'recipe_content') ? undefined : RecipeOverviewFromJSON(json['recipe_content']),
    };
}

export function PatchedRecipeBookEntryToJSON(value?: PatchedRecipeBookEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'book': value.book,
        'recipe': value.recipe,
    };
}

