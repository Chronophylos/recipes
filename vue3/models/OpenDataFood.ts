/* tslint:disable */
/* eslint-disable */
/**
 * Django Recipes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OpenDataConversionFoodPreferredUnitMetric } from './OpenDataConversionFoodPreferredUnitMetric';
import {
    OpenDataConversionFoodPreferredUnitMetricFromJSON,
    OpenDataConversionFoodPreferredUnitMetricFromJSONTyped,
    OpenDataConversionFoodPreferredUnitMetricToJSON,
} from './OpenDataConversionFoodPreferredUnitMetric';
import type { OpenDataConversionFoodPropertiesFoodUnit } from './OpenDataConversionFoodPropertiesFoodUnit';
import {
    OpenDataConversionFoodPropertiesFoodUnitFromJSON,
    OpenDataConversionFoodPropertiesFoodUnitFromJSONTyped,
    OpenDataConversionFoodPropertiesFoodUnitToJSON,
} from './OpenDataConversionFoodPropertiesFoodUnit';
import type { OpenDataConversionFoodPropertiesInner } from './OpenDataConversionFoodPropertiesInner';
import {
    OpenDataConversionFoodPropertiesInnerFromJSON,
    OpenDataConversionFoodPropertiesInnerFromJSONTyped,
    OpenDataConversionFoodPropertiesInnerToJSON,
} from './OpenDataConversionFoodPropertiesInner';
import type { OpenDataStoreCategoryToStoreInnerCategory } from './OpenDataStoreCategoryToStoreInnerCategory';
import {
    OpenDataStoreCategoryToStoreInnerCategoryFromJSON,
    OpenDataStoreCategoryToStoreInnerCategoryFromJSONTyped,
    OpenDataStoreCategoryToStoreInnerCategoryToJSON,
} from './OpenDataStoreCategoryToStoreInnerCategory';
import type { OpenDataUnitVersion } from './OpenDataUnitVersion';
import {
    OpenDataUnitVersionFromJSON,
    OpenDataUnitVersionFromJSONTyped,
    OpenDataUnitVersionToJSON,
} from './OpenDataUnitVersion';

/**
 * 
 * @export
 * @interface OpenDataFood
 */
export interface OpenDataFood {
    /**
     * 
     * @type {number}
     * @memberof OpenDataFood
     */
    readonly id?: number;
    /**
     * 
     * @type {OpenDataUnitVersion}
     * @memberof OpenDataFood
     */
    version: OpenDataUnitVersion;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    slug: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    pluralName: string;
    /**
     * 
     * @type {OpenDataStoreCategoryToStoreInnerCategory}
     * @memberof OpenDataFood
     */
    storeCategory: OpenDataStoreCategoryToStoreInnerCategory;
    /**
     * 
     * @type {OpenDataConversionFoodPreferredUnitMetric}
     * @memberof OpenDataFood
     */
    preferredUnitMetric?: OpenDataConversionFoodPreferredUnitMetric | null;
    /**
     * 
     * @type {OpenDataConversionFoodPreferredUnitMetric}
     * @memberof OpenDataFood
     */
    preferredShoppingUnitMetric?: OpenDataConversionFoodPreferredUnitMetric | null;
    /**
     * 
     * @type {OpenDataConversionFoodPreferredUnitMetric}
     * @memberof OpenDataFood
     */
    preferredUnitImperial?: OpenDataConversionFoodPreferredUnitMetric | null;
    /**
     * 
     * @type {OpenDataConversionFoodPreferredUnitMetric}
     * @memberof OpenDataFood
     */
    preferredShoppingUnitImperial?: OpenDataConversionFoodPreferredUnitMetric | null;
    /**
     * 
     * @type {Array<OpenDataConversionFoodPropertiesInner>}
     * @memberof OpenDataFood
     */
    properties: Array<OpenDataConversionFoodPropertiesInner> | null;
    /**
     * 
     * @type {number}
     * @memberof OpenDataFood
     */
    propertiesFoodAmount?: number;
    /**
     * 
     * @type {OpenDataConversionFoodPropertiesFoodUnit}
     * @memberof OpenDataFood
     */
    propertiesFoodUnit: OpenDataConversionFoodPropertiesFoodUnit;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    propertiesSource?: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    fdcId: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFood
     */
    readonly createdBy?: string;
}

/**
 * Check if a given object implements the OpenDataFood interface.
 */
export function instanceOfOpenDataFood(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "version" in value;
    isInstance = isInstance && "slug" in value;
    isInstance = isInstance && "name" in value;
    isInstance = isInstance && "pluralName" in value;
    isInstance = isInstance && "storeCategory" in value;
    isInstance = isInstance && "properties" in value;
    isInstance = isInstance && "propertiesFoodUnit" in value;
    isInstance = isInstance && "fdcId" in value;

    return isInstance;
}

export function OpenDataFoodFromJSON(json: any): OpenDataFood {
    return OpenDataFoodFromJSONTyped(json, false);
}

export function OpenDataFoodFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenDataFood {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': OpenDataUnitVersionFromJSON(json['version']),
        'slug': json['slug'],
        'name': json['name'],
        'pluralName': json['plural_name'],
        'storeCategory': OpenDataStoreCategoryToStoreInnerCategoryFromJSON(json['store_category']),
        'preferredUnitMetric': !exists(json, 'preferred_unit_metric') ? undefined : OpenDataConversionFoodPreferredUnitMetricFromJSON(json['preferred_unit_metric']),
        'preferredShoppingUnitMetric': !exists(json, 'preferred_shopping_unit_metric') ? undefined : OpenDataConversionFoodPreferredUnitMetricFromJSON(json['preferred_shopping_unit_metric']),
        'preferredUnitImperial': !exists(json, 'preferred_unit_imperial') ? undefined : OpenDataConversionFoodPreferredUnitMetricFromJSON(json['preferred_unit_imperial']),
        'preferredShoppingUnitImperial': !exists(json, 'preferred_shopping_unit_imperial') ? undefined : OpenDataConversionFoodPreferredUnitMetricFromJSON(json['preferred_shopping_unit_imperial']),
        'properties': (json['properties'] === null ? null : (json['properties'] as Array<any>).map(OpenDataConversionFoodPropertiesInnerFromJSON)),
        'propertiesFoodAmount': !exists(json, 'properties_food_amount') ? undefined : json['properties_food_amount'],
        'propertiesFoodUnit': OpenDataConversionFoodPropertiesFoodUnitFromJSON(json['properties_food_unit']),
        'propertiesSource': !exists(json, 'properties_source') ? undefined : json['properties_source'],
        'fdcId': json['fdc_id'],
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
    };
}

export function OpenDataFoodToJSON(value?: OpenDataFood | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': OpenDataUnitVersionToJSON(value.version),
        'slug': value.slug,
        'name': value.name,
        'plural_name': value.pluralName,
        'store_category': OpenDataStoreCategoryToStoreInnerCategoryToJSON(value.storeCategory),
        'preferred_unit_metric': OpenDataConversionFoodPreferredUnitMetricToJSON(value.preferredUnitMetric),
        'preferred_shopping_unit_metric': OpenDataConversionFoodPreferredUnitMetricToJSON(value.preferredShoppingUnitMetric),
        'preferred_unit_imperial': OpenDataConversionFoodPreferredUnitMetricToJSON(value.preferredUnitImperial),
        'preferred_shopping_unit_imperial': OpenDataConversionFoodPreferredUnitMetricToJSON(value.preferredShoppingUnitImperial),
        'properties': (value.properties === null ? null : (value.properties as Array<any>).map(OpenDataConversionFoodPropertiesInnerToJSON)),
        'properties_food_amount': value.propertiesFoodAmount,
        'properties_food_unit': OpenDataConversionFoodPropertiesFoodUnitToJSON(value.propertiesFoodUnit),
        'properties_source': value.propertiesSource,
        'fdc_id': value.fdcId,
        'comment': value.comment,
    };
}

