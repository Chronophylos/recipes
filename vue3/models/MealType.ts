/* tslint:disable */
/* eslint-disable */
/**
 * Django Recipes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface MealType
 */
export interface MealType {
    /**
     * 
     * @type {number}
     * @memberof MealType
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof MealType
     */
    name: string;
    /**
     * 
     * @type {number}
     * @memberof MealType
     */
    order?: number;
    /**
     * 
     * @type {string}
     * @memberof MealType
     */
    color?: string | null;
    /**
     * 
     * @type {boolean}
     * @memberof MealType
     */
    _default?: boolean;
    /**
     * 
     * @type {string}
     * @memberof MealType
     */
    readonly createdBy?: string;
}

/**
 * Check if a given object implements the MealType interface.
 */
export function instanceOfMealType(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function MealTypeFromJSON(json: any): MealType {
    return MealTypeFromJSONTyped(json, false);
}

export function MealTypeFromJSONTyped(json: any, ignoreDiscriminator: boolean): MealType {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'color': !exists(json, 'color') ? undefined : json['color'],
        '_default': !exists(json, 'default') ? undefined : json['default'],
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
    };
}

export function MealTypeToJSON(value?: MealType | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'order': value.order,
        'color': value.color,
        'default': value._default,
    };
}

