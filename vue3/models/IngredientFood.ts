/* tslint:disable */
/* eslint-disable */
/**
 * Django Recipes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { FoodInheritFieldsInner } from './FoodInheritFieldsInner';
import {
    FoodInheritFieldsInnerFromJSON,
    FoodInheritFieldsInnerFromJSONTyped,
    FoodInheritFieldsInnerToJSON,
} from './FoodInheritFieldsInner';
import type { FoodPropertiesFoodUnit } from './FoodPropertiesFoodUnit';
import {
    FoodPropertiesFoodUnitFromJSON,
    FoodPropertiesFoodUnitFromJSONTyped,
    FoodPropertiesFoodUnitToJSON,
} from './FoodPropertiesFoodUnit';
import type { FoodPropertiesInner } from './FoodPropertiesInner';
import {
    FoodPropertiesInnerFromJSON,
    FoodPropertiesInnerFromJSONTyped,
    FoodPropertiesInnerToJSON,
} from './FoodPropertiesInner';
import type { FoodRecipe } from './FoodRecipe';
import {
    FoodRecipeFromJSON,
    FoodRecipeFromJSONTyped,
    FoodRecipeToJSON,
} from './FoodRecipe';
import type { FoodSubstituteInner } from './FoodSubstituteInner';
import {
    FoodSubstituteInnerFromJSON,
    FoodSubstituteInnerFromJSONTyped,
    FoodSubstituteInnerToJSON,
} from './FoodSubstituteInner';
import type { FoodSupermarketCategory } from './FoodSupermarketCategory';
import {
    FoodSupermarketCategoryFromJSON,
    FoodSupermarketCategoryFromJSONTyped,
    FoodSupermarketCategoryToJSON,
} from './FoodSupermarketCategory';

/**
 * 
 * @export
 * @interface IngredientFood
 */
export interface IngredientFood {
    /**
     * 
     * @type {number}
     * @memberof IngredientFood
     */
    readonly id?: number;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    pluralName?: string | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    description?: string;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    readonly shopping?: string;
    /**
     * 
     * @type {FoodRecipe}
     * @memberof IngredientFood
     */
    recipe?: FoodRecipe | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    url?: string | null;
    /**
     * 
     * @type {Array<FoodPropertiesInner>}
     * @memberof IngredientFood
     */
    properties?: Array<FoodPropertiesInner> | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    propertiesFoodAmount?: string;
    /**
     * 
     * @type {FoodPropertiesFoodUnit}
     * @memberof IngredientFood
     */
    propertiesFoodUnit?: FoodPropertiesFoodUnit | null;
    /**
     * 
     * @type {number}
     * @memberof IngredientFood
     */
    fdcId?: number | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    foodOnhand?: string | null;
    /**
     * 
     * @type {FoodSupermarketCategory}
     * @memberof IngredientFood
     */
    supermarketCategory?: FoodSupermarketCategory | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    readonly parent?: string;
    /**
     * 
     * @type {number}
     * @memberof IngredientFood
     */
    readonly numchild?: number;
    /**
     * 
     * @type {Array<FoodInheritFieldsInner>}
     * @memberof IngredientFood
     */
    inheritFields?: Array<FoodInheritFieldsInner> | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    readonly fullName?: string;
    /**
     * 
     * @type {boolean}
     * @memberof IngredientFood
     */
    ignoreShopping?: boolean;
    /**
     * 
     * @type {Array<FoodSubstituteInner>}
     * @memberof IngredientFood
     */
    substitute?: Array<FoodSubstituteInner> | null;
    /**
     * 
     * @type {boolean}
     * @memberof IngredientFood
     */
    substituteSiblings?: boolean;
    /**
     * 
     * @type {boolean}
     * @memberof IngredientFood
     */
    substituteChildren?: boolean;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    readonly substituteOnhand?: string;
    /**
     * 
     * @type {Array<FoodInheritFieldsInner>}
     * @memberof IngredientFood
     */
    childInheritFields?: Array<FoodInheritFieldsInner> | null;
    /**
     * 
     * @type {string}
     * @memberof IngredientFood
     */
    openDataSlug?: string | null;
}

/**
 * Check if a given object implements the IngredientFood interface.
 */
export function instanceOfIngredientFood(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function IngredientFoodFromJSON(json: any): IngredientFood {
    return IngredientFoodFromJSONTyped(json, false);
}

export function IngredientFoodFromJSONTyped(json: any, ignoreDiscriminator: boolean): IngredientFood {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'name': json['name'],
        'pluralName': !exists(json, 'plural_name') ? undefined : json['plural_name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'shopping': !exists(json, 'shopping') ? undefined : json['shopping'],
        'recipe': !exists(json, 'recipe') ? undefined : FoodRecipeFromJSON(json['recipe']),
        'url': !exists(json, 'url') ? undefined : json['url'],
        'properties': !exists(json, 'properties') ? undefined : (json['properties'] === null ? null : (json['properties'] as Array<any>).map(FoodPropertiesInnerFromJSON)),
        'propertiesFoodAmount': !exists(json, 'properties_food_amount') ? undefined : json['properties_food_amount'],
        'propertiesFoodUnit': !exists(json, 'properties_food_unit') ? undefined : FoodPropertiesFoodUnitFromJSON(json['properties_food_unit']),
        'fdcId': !exists(json, 'fdc_id') ? undefined : json['fdc_id'],
        'foodOnhand': !exists(json, 'food_onhand') ? undefined : json['food_onhand'],
        'supermarketCategory': !exists(json, 'supermarket_category') ? undefined : FoodSupermarketCategoryFromJSON(json['supermarket_category']),
        'parent': !exists(json, 'parent') ? undefined : json['parent'],
        'numchild': !exists(json, 'numchild') ? undefined : json['numchild'],
        'inheritFields': !exists(json, 'inherit_fields') ? undefined : (json['inherit_fields'] === null ? null : (json['inherit_fields'] as Array<any>).map(FoodInheritFieldsInnerFromJSON)),
        'fullName': !exists(json, 'full_name') ? undefined : json['full_name'],
        'ignoreShopping': !exists(json, 'ignore_shopping') ? undefined : json['ignore_shopping'],
        'substitute': !exists(json, 'substitute') ? undefined : (json['substitute'] === null ? null : (json['substitute'] as Array<any>).map(FoodSubstituteInnerFromJSON)),
        'substituteSiblings': !exists(json, 'substitute_siblings') ? undefined : json['substitute_siblings'],
        'substituteChildren': !exists(json, 'substitute_children') ? undefined : json['substitute_children'],
        'substituteOnhand': !exists(json, 'substitute_onhand') ? undefined : json['substitute_onhand'],
        'childInheritFields': !exists(json, 'child_inherit_fields') ? undefined : (json['child_inherit_fields'] === null ? null : (json['child_inherit_fields'] as Array<any>).map(FoodInheritFieldsInnerFromJSON)),
        'openDataSlug': !exists(json, 'open_data_slug') ? undefined : json['open_data_slug'],
    };
}

export function IngredientFoodToJSON(value?: IngredientFood | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'plural_name': value.pluralName,
        'description': value.description,
        'recipe': FoodRecipeToJSON(value.recipe),
        'url': value.url,
        'properties': value.properties === undefined ? undefined : (value.properties === null ? null : (value.properties as Array<any>).map(FoodPropertiesInnerToJSON)),
        'properties_food_amount': value.propertiesFoodAmount,
        'properties_food_unit': FoodPropertiesFoodUnitToJSON(value.propertiesFoodUnit),
        'fdc_id': value.fdcId,
        'food_onhand': value.foodOnhand,
        'supermarket_category': FoodSupermarketCategoryToJSON(value.supermarketCategory),
        'inherit_fields': value.inheritFields === undefined ? undefined : (value.inheritFields === null ? null : (value.inheritFields as Array<any>).map(FoodInheritFieldsInnerToJSON)),
        'ignore_shopping': value.ignoreShopping,
        'substitute': value.substitute === undefined ? undefined : (value.substitute === null ? null : (value.substitute as Array<any>).map(FoodSubstituteInnerToJSON)),
        'substitute_siblings': value.substituteSiblings,
        'substitute_children': value.substituteChildren,
        'child_inherit_fields': value.childInheritFields === undefined ? undefined : (value.childInheritFields === null ? null : (value.childInheritFields as Array<any>).map(FoodInheritFieldsInnerToJSON)),
        'open_data_slug': value.openDataSlug,
    };
}

