/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { IngredientRequest } from './IngredientRequest';
import {
    IngredientRequestFromJSON,
    IngredientRequestFromJSONTyped,
    IngredientRequestToJSON,
} from './IngredientRequest';
import type { UserFileViewRequest } from './UserFileViewRequest';
import {
    UserFileViewRequestFromJSON,
    UserFileViewRequestFromJSONTyped,
    UserFileViewRequestToJSON,
} from './UserFileViewRequest';

/**
 * Adds nested create feature
 * @export
 * @interface StepRequest
 */
export interface StepRequest {
    /**
     * 
     * @type {string}
     * @memberof StepRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof StepRequest
     */
    instruction?: string;
    /**
     * 
     * @type {Array<IngredientRequest>}
     * @memberof StepRequest
     */
    ingredients: Array<IngredientRequest>;
    /**
     * 
     * @type {number}
     * @memberof StepRequest
     */
    time?: number;
    /**
     * 
     * @type {number}
     * @memberof StepRequest
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof StepRequest
     */
    showAsHeader?: boolean;
    /**
     * 
     * @type {UserFileViewRequest}
     * @memberof StepRequest
     */
    file?: UserFileViewRequest;
    /**
     * 
     * @type {number}
     * @memberof StepRequest
     */
    stepRecipe?: number;
    /**
     * 
     * @type {boolean}
     * @memberof StepRequest
     */
    showIngredientsTable?: boolean;
}

/**
 * Check if a given object implements the StepRequest interface.
 */
export function instanceOfStepRequest(value: object): boolean {
    if (!('ingredients' in value)) return false;
    return true;
}

export function StepRequestFromJSON(json: any): StepRequest {
    return StepRequestFromJSONTyped(json, false);
}

export function StepRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): StepRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'instruction': json['instruction'] == null ? undefined : json['instruction'],
        'ingredients': ((json['ingredients'] as Array<any>).map(IngredientRequestFromJSON)),
        'time': json['time'] == null ? undefined : json['time'],
        'order': json['order'] == null ? undefined : json['order'],
        'showAsHeader': json['show_as_header'] == null ? undefined : json['show_as_header'],
        'file': json['file'] == null ? undefined : UserFileViewRequestFromJSON(json['file']),
        'stepRecipe': json['step_recipe'] == null ? undefined : json['step_recipe'],
        'showIngredientsTable': json['show_ingredients_table'] == null ? undefined : json['show_ingredients_table'],
    };
}

export function StepRequestToJSON(value?: StepRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'instruction': value['instruction'],
        'ingredients': ((value['ingredients'] as Array<any>).map(IngredientRequestToJSON)),
        'time': value['time'],
        'order': value['order'],
        'show_as_header': value['showAsHeader'],
        'file': UserFileViewRequestToJSON(value['file']),
        'step_recipe': value['stepRecipe'],
        'show_ingredients_table': value['showIngredientsTable'],
    };
}

