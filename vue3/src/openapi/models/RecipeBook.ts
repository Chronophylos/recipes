/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    CustomFilter,
    CustomFilterFromJSON,
    CustomFilterFromJSONTyped,
    CustomFilterToJSON,
    User,
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './';

/**
 * Adds nested create feature
 * @export
 * @interface RecipeBook
 */
export interface RecipeBook {
    /**
     * 
     * @type {number}
     * @memberof RecipeBook
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof RecipeBook
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof RecipeBook
     */
    description?: string;
    /**
     * 
     * @type {Array<User>}
     * @memberof RecipeBook
     */
    shared: Array<User>;
    /**
     * 
     * @type {number}
     * @memberof RecipeBook
     */
    readonly createdBy: number;
    /**
     * 
     * @type {CustomFilter}
     * @memberof RecipeBook
     */
    filter?: CustomFilter | null;
    /**
     * 
     * @type {number}
     * @memberof RecipeBook
     */
    order?: number;
}

export function RecipeBookFromJSON(json: any): RecipeBook {
    return RecipeBookFromJSONTyped(json, false);
}

export function RecipeBookFromJSONTyped(json: any, ignoreDiscriminator: boolean): RecipeBook {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'name': json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'shared': ((json['shared'] as Array<any>).map(UserFromJSON)),
        'createdBy': json['created_by'],
        'filter': !exists(json, 'filter') ? undefined : CustomFilterFromJSON(json['filter']),
        'order': !exists(json, 'order') ? undefined : json['order'],
    };
}

export function RecipeBookToJSON(value?: RecipeBook | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'description': value.description,
        'shared': ((value.shared as Array<any>).map(UserToJSON)),
        'filter': CustomFilterToJSON(value.filter),
        'order': value.order,
    };
}


