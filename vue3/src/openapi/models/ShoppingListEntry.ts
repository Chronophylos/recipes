/* tslint:disable */
/* eslint-disable */
/**
 * Django Recipes
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { CookLogCreatedBy } from './CookLogCreatedBy';
import {
    CookLogCreatedByFromJSON,
    CookLogCreatedByFromJSONTyped,
    CookLogCreatedByToJSON,
} from './CookLogCreatedBy';
import type { FoodPropertiesFoodUnit } from './FoodPropertiesFoodUnit';
import {
    FoodPropertiesFoodUnitFromJSON,
    FoodPropertiesFoodUnitFromJSONTyped,
    FoodPropertiesFoodUnitToJSON,
} from './FoodPropertiesFoodUnit';
import type { IngredientFood } from './IngredientFood';
import {
    IngredientFoodFromJSON,
    IngredientFoodFromJSONTyped,
    IngredientFoodToJSON,
} from './IngredientFood';
import type { ShoppingListEntryRecipeMealplan } from './ShoppingListEntryRecipeMealplan';
import {
    ShoppingListEntryRecipeMealplanFromJSON,
    ShoppingListEntryRecipeMealplanFromJSONTyped,
    ShoppingListEntryRecipeMealplanToJSON,
} from './ShoppingListEntryRecipeMealplan';

/**
 * 
 * @export
 * @interface ShoppingListEntry
 */
export interface ShoppingListEntry {
    /**
     * 
     * @type {number}
     * @memberof ShoppingListEntry
     */
    readonly id?: number;
    /**
     * 
     * @type {number}
     * @memberof ShoppingListEntry
     */
    listRecipe?: number | null;
    /**
     * 
     * @type {IngredientFood}
     * @memberof ShoppingListEntry
     */
    food: IngredientFood | null;
    /**
     * 
     * @type {FoodPropertiesFoodUnit}
     * @memberof ShoppingListEntry
     */
    unit?: FoodPropertiesFoodUnit | null;
    /**
     * 
     * @type {string}
     * @memberof ShoppingListEntry
     */
    amount: string;
    /**
     * 
     * @type {number}
     * @memberof ShoppingListEntry
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof ShoppingListEntry
     */
    checked?: boolean;
    /**
     * 
     * @type {ShoppingListEntryRecipeMealplan}
     * @memberof ShoppingListEntry
     */
    recipeMealplan?: ShoppingListEntryRecipeMealplan;
    /**
     * 
     * @type {CookLogCreatedBy}
     * @memberof ShoppingListEntry
     */
    createdBy?: CookLogCreatedBy;
    /**
     * 
     * @type {Date}
     * @memberof ShoppingListEntry
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ShoppingListEntry
     */
    readonly updatedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof ShoppingListEntry
     */
    completedAt?: Date | null;
    /**
     * 
     * @type {Date}
     * @memberof ShoppingListEntry
     */
    delayUntil?: Date | null;
}

/**
 * Check if a given object implements the ShoppingListEntry interface.
 */
export function instanceOfShoppingListEntry(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "food" in value;
    isInstance = isInstance && "amount" in value;

    return isInstance;
}

export function ShoppingListEntryFromJSON(json: any): ShoppingListEntry {
    return ShoppingListEntryFromJSONTyped(json, false);
}

export function ShoppingListEntryFromJSONTyped(json: any, ignoreDiscriminator: boolean): ShoppingListEntry {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'listRecipe': !exists(json, 'list_recipe') ? undefined : json['list_recipe'],
        'food': IngredientFoodFromJSON(json['food']),
        'unit': !exists(json, 'unit') ? undefined : FoodPropertiesFoodUnitFromJSON(json['unit']),
        'amount': json['amount'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'checked': !exists(json, 'checked') ? undefined : json['checked'],
        'recipeMealplan': !exists(json, 'recipe_mealplan') ? undefined : ShoppingListEntryRecipeMealplanFromJSON(json['recipe_mealplan']),
        'createdBy': !exists(json, 'created_by') ? undefined : CookLogCreatedByFromJSON(json['created_by']),
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
        'completedAt': !exists(json, 'completed_at') ? undefined : (json['completed_at'] === null ? null : new Date(json['completed_at'])),
        'delayUntil': !exists(json, 'delay_until') ? undefined : (json['delay_until'] === null ? null : new Date(json['delay_until'])),
    };
}

export function ShoppingListEntryToJSON(value?: ShoppingListEntry | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'list_recipe': value.listRecipe,
        'food': IngredientFoodToJSON(value.food),
        'unit': FoodPropertiesFoodUnitToJSON(value.unit),
        'amount': value.amount,
        'order': value.order,
        'checked': value.checked,
        'recipe_mealplan': ShoppingListEntryRecipeMealplanToJSON(value.recipeMealplan),
        'created_by': CookLogCreatedByToJSON(value.createdBy),
        'completed_at': value.completedAt === undefined ? undefined : (value.completedAt === null ? null : value.completedAt.toISOString()),
        'delay_until': value.delayUntil === undefined ? undefined : (value.delayUntil === null ? null : value.delayUntil.toISOString()),
    };
}

