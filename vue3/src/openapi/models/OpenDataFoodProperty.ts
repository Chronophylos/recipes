/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OpenDataProperty } from './OpenDataProperty';
import {
    OpenDataPropertyFromJSON,
    OpenDataPropertyFromJSONTyped,
    OpenDataPropertyToJSON,
} from './OpenDataProperty';

/**
 * Adds nested create feature
 * @export
 * @interface OpenDataFoodProperty
 */
export interface OpenDataFoodProperty {
    /**
     * 
     * @type {number}
     * @memberof OpenDataFoodProperty
     */
    readonly id: number;
    /**
     * 
     * @type {OpenDataProperty}
     * @memberof OpenDataFoodProperty
     */
    property: OpenDataProperty;
    /**
     * 
     * @type {string}
     * @memberof OpenDataFoodProperty
     */
    propertyAmount: string;
}

/**
 * Check if a given object implements the OpenDataFoodProperty interface.
 */
export function instanceOfOpenDataFoodProperty(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "property" in value;
    isInstance = isInstance && "propertyAmount" in value;

    return isInstance;
}

export function OpenDataFoodPropertyFromJSON(json: any): OpenDataFoodProperty {
    return OpenDataFoodPropertyFromJSONTyped(json, false);
}

export function OpenDataFoodPropertyFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenDataFoodProperty {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'property': OpenDataPropertyFromJSON(json['property']),
        'propertyAmount': json['property_amount'],
    };
}

export function OpenDataFoodPropertyToJSON(value?: OpenDataFoodProperty | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'property': OpenDataPropertyToJSON(value.property),
        'property_amount': value.propertyAmount,
    };
}

