/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { Group } from './Group';
import {
    GroupFromJSON,
    GroupFromJSONTyped,
    GroupToJSON,
} from './Group';
import type { User } from './User';
import {
    UserFromJSON,
    UserFromJSONTyped,
    UserToJSON,
} from './User';

/**
 * Adds nested create feature
 * @export
 * @interface PatchedUserSpace
 */
export interface PatchedUserSpace {
    /**
     * 
     * @type {number}
     * @memberof PatchedUserSpace
     */
    readonly id?: number;
    /**
     * 
     * @type {User}
     * @memberof PatchedUserSpace
     */
    readonly user?: User;
    /**
     * 
     * @type {number}
     * @memberof PatchedUserSpace
     */
    readonly space?: number;
    /**
     * 
     * @type {Array<Group>}
     * @memberof PatchedUserSpace
     */
    groups?: Array<Group>;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedUserSpace
     */
    active?: boolean;
    /**
     * 
     * @type {string}
     * @memberof PatchedUserSpace
     */
    internalNote?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedUserSpace
     */
    readonly inviteLink?: number | null;
    /**
     * 
     * @type {Date}
     * @memberof PatchedUserSpace
     */
    readonly createdAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof PatchedUserSpace
     */
    readonly updatedAt?: Date;
}

/**
 * Check if a given object implements the PatchedUserSpace interface.
 */
export function instanceOfPatchedUserSpace(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedUserSpaceFromJSON(json: any): PatchedUserSpace {
    return PatchedUserSpaceFromJSONTyped(json, false);
}

export function PatchedUserSpaceFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedUserSpace {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'user': !exists(json, 'user') ? undefined : UserFromJSON(json['user']),
        'space': !exists(json, 'space') ? undefined : json['space'],
        'groups': !exists(json, 'groups') ? undefined : ((json['groups'] as Array<any>).map(GroupFromJSON)),
        'active': !exists(json, 'active') ? undefined : json['active'],
        'internalNote': !exists(json, 'internal_note') ? undefined : json['internal_note'],
        'inviteLink': !exists(json, 'invite_link') ? undefined : json['invite_link'],
        'createdAt': !exists(json, 'created_at') ? undefined : (new Date(json['created_at'])),
        'updatedAt': !exists(json, 'updated_at') ? undefined : (new Date(json['updated_at'])),
    };
}

export function PatchedUserSpaceToJSON(value?: PatchedUserSpace | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'groups': value.groups === undefined ? undefined : ((value.groups as Array<any>).map(GroupToJSON)),
        'active': value.active,
        'internal_note': value.internalNote,
    };
}

