/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface AccessToken
 */
export interface AccessToken {
    /**
     * 
     * @type {number}
     * @memberof AccessToken
     */
    readonly id: number;
    /**
     * 
     * @type {string}
     * @memberof AccessToken
     */
    readonly token: string;
    /**
     * 
     * @type {Date}
     * @memberof AccessToken
     */
    expires: Date;
    /**
     * 
     * @type {string}
     * @memberof AccessToken
     */
    scope?: string;
    /**
     * 
     * @type {Date}
     * @memberof AccessToken
     */
    readonly created: Date;
    /**
     * 
     * @type {Date}
     * @memberof AccessToken
     */
    readonly updated: Date;
}

/**
 * Check if a given object implements the AccessToken interface.
 */
export function instanceOfAccessToken(value: object): boolean {
    if (!('id' in value)) return false;
    if (!('token' in value)) return false;
    if (!('expires' in value)) return false;
    if (!('created' in value)) return false;
    if (!('updated' in value)) return false;
    return true;
}

export function AccessTokenFromJSON(json: any): AccessToken {
    return AccessTokenFromJSONTyped(json, false);
}

export function AccessTokenFromJSONTyped(json: any, ignoreDiscriminator: boolean): AccessToken {
    if (json == null) {
        return json;
    }
    return {
        
        'id': json['id'],
        'token': json['token'],
        'expires': (new Date(json['expires'])),
        'scope': json['scope'] == null ? undefined : json['scope'],
        'created': (new Date(json['created'])),
        'updated': (new Date(json['updated'])),
    };
}

export function AccessTokenToJSON(value?: AccessToken | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'expires': ((value['expires']).toISOString()),
        'scope': value['scope'],
    };
}

