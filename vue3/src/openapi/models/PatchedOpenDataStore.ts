/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import {
    OpenDataStoreCategory,
    OpenDataStoreCategoryFromJSON,
    OpenDataStoreCategoryFromJSONTyped,
    OpenDataStoreCategoryToJSON,
    OpenDataVersion,
    OpenDataVersionFromJSON,
    OpenDataVersionFromJSONTyped,
    OpenDataVersionToJSON,
} from './';

/**
 * Adds nested create feature
 * @export
 * @interface PatchedOpenDataStore
 */
export interface PatchedOpenDataStore {
    /**
     * 
     * @type {number}
     * @memberof PatchedOpenDataStore
     */
    readonly id?: number;
    /**
     * 
     * @type {OpenDataVersion}
     * @memberof PatchedOpenDataStore
     */
    version?: OpenDataVersion;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataStore
     */
    slug?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataStore
     */
    name?: string;
    /**
     * 
     * @type {Array<OpenDataStoreCategory>}
     * @memberof PatchedOpenDataStore
     */
    categoryToStore?: Array<OpenDataStoreCategory> | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataStore
     */
    comment?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataStore
     */
    readonly createdBy?: string;
}

export function PatchedOpenDataStoreFromJSON(json: any): PatchedOpenDataStore {
    return PatchedOpenDataStoreFromJSONTyped(json, false);
}

export function PatchedOpenDataStoreFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedOpenDataStore {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'version': !exists(json, 'version') ? undefined : OpenDataVersionFromJSON(json['version']),
        'slug': !exists(json, 'slug') ? undefined : json['slug'],
        'name': !exists(json, 'name') ? undefined : json['name'],
        'categoryToStore': !exists(json, 'category_to_store') ? undefined : (json['category_to_store'] === null ? null : (json['category_to_store'] as Array<any>).map(OpenDataStoreCategoryFromJSON)),
        'comment': !exists(json, 'comment') ? undefined : json['comment'],
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
    };
}

export function PatchedOpenDataStoreToJSON(value?: PatchedOpenDataStore | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'version': OpenDataVersionToJSON(value.version),
        'slug': value.slug,
        'name': value.name,
        'category_to_store': value.categoryToStore === undefined ? undefined : (value.categoryToStore === null ? null : (value.categoryToStore as Array<any>).map(OpenDataStoreCategoryToJSON)),
        'comment': value.comment,
    };
}


