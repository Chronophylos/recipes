/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { OpenDataCategory } from './OpenDataCategory';
import {
    OpenDataCategoryFromJSON,
    OpenDataCategoryFromJSONTyped,
    OpenDataCategoryToJSON,
} from './OpenDataCategory';

/**
 * Adds nested create feature
 * @export
 * @interface OpenDataStoreCategory
 */
export interface OpenDataStoreCategory {
    /**
     * 
     * @type {number}
     * @memberof OpenDataStoreCategory
     */
    readonly id: number;
    /**
     * 
     * @type {OpenDataCategory}
     * @memberof OpenDataStoreCategory
     */
    category: OpenDataCategory;
    /**
     * 
     * @type {number}
     * @memberof OpenDataStoreCategory
     */
    store: number;
    /**
     * 
     * @type {number}
     * @memberof OpenDataStoreCategory
     */
    order?: number;
}

/**
 * Check if a given object implements the OpenDataStoreCategory interface.
 */
export function instanceOfOpenDataStoreCategory(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "id" in value;
    isInstance = isInstance && "category" in value;
    isInstance = isInstance && "store" in value;

    return isInstance;
}

export function OpenDataStoreCategoryFromJSON(json: any): OpenDataStoreCategory {
    return OpenDataStoreCategoryFromJSONTyped(json, false);
}

export function OpenDataStoreCategoryFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenDataStoreCategory {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': json['id'],
        'category': OpenDataCategoryFromJSON(json['category']),
        'store': json['store'],
        'order': !exists(json, 'order') ? undefined : json['order'],
    };
}

export function OpenDataStoreCategoryToJSON(value?: OpenDataStoreCategory | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'category': OpenDataCategoryToJSON(value.category),
        'store': value.store,
        'order': value.order,
    };
}

