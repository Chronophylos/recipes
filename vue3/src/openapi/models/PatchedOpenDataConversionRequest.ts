/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpenDataFoodRequest } from './OpenDataFoodRequest';
import {
    OpenDataFoodRequestFromJSON,
    OpenDataFoodRequestFromJSONTyped,
    OpenDataFoodRequestToJSON,
} from './OpenDataFoodRequest';
import type { OpenDataUnitRequest } from './OpenDataUnitRequest';
import {
    OpenDataUnitRequestFromJSON,
    OpenDataUnitRequestFromJSONTyped,
    OpenDataUnitRequestToJSON,
} from './OpenDataUnitRequest';
import type { OpenDataVersionRequest } from './OpenDataVersionRequest';
import {
    OpenDataVersionRequestFromJSON,
    OpenDataVersionRequestFromJSONTyped,
    OpenDataVersionRequestToJSON,
} from './OpenDataVersionRequest';

/**
 * Adds nested create feature
 * @export
 * @interface PatchedOpenDataConversionRequest
 */
export interface PatchedOpenDataConversionRequest {
    /**
     * 
     * @type {OpenDataVersionRequest}
     * @memberof PatchedOpenDataConversionRequest
     */
    version?: OpenDataVersionRequest;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataConversionRequest
     */
    slug?: string;
    /**
     * 
     * @type {OpenDataFoodRequest}
     * @memberof PatchedOpenDataConversionRequest
     */
    food?: OpenDataFoodRequest;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataConversionRequest
     */
    baseAmount?: string;
    /**
     * 
     * @type {OpenDataUnitRequest}
     * @memberof PatchedOpenDataConversionRequest
     */
    baseUnit?: OpenDataUnitRequest;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataConversionRequest
     */
    convertedAmount?: string;
    /**
     * 
     * @type {OpenDataUnitRequest}
     * @memberof PatchedOpenDataConversionRequest
     */
    convertedUnit?: OpenDataUnitRequest;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataConversionRequest
     */
    source?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedOpenDataConversionRequest
     */
    comment?: string;
    /**
     * 
     * @type {number}
     * @memberof PatchedOpenDataConversionRequest
     */
    id?: number;
}

/**
 * Check if a given object implements the PatchedOpenDataConversionRequest interface.
 */
export function instanceOfPatchedOpenDataConversionRequest(value: object): boolean {
    return true;
}

export function PatchedOpenDataConversionRequestFromJSON(json: any): PatchedOpenDataConversionRequest {
    return PatchedOpenDataConversionRequestFromJSONTyped(json, false);
}

export function PatchedOpenDataConversionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedOpenDataConversionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'version': json['version'] == null ? undefined : OpenDataVersionRequestFromJSON(json['version']),
        'slug': json['slug'] == null ? undefined : json['slug'],
        'food': json['food'] == null ? undefined : OpenDataFoodRequestFromJSON(json['food']),
        'baseAmount': json['base_amount'] == null ? undefined : json['base_amount'],
        'baseUnit': json['base_unit'] == null ? undefined : OpenDataUnitRequestFromJSON(json['base_unit']),
        'convertedAmount': json['converted_amount'] == null ? undefined : json['converted_amount'],
        'convertedUnit': json['converted_unit'] == null ? undefined : OpenDataUnitRequestFromJSON(json['converted_unit']),
        'source': json['source'] == null ? undefined : json['source'],
        'comment': json['comment'] == null ? undefined : json['comment'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function PatchedOpenDataConversionRequestToJSON(value?: PatchedOpenDataConversionRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'version': OpenDataVersionRequestToJSON(value['version']),
        'slug': value['slug'],
        'food': OpenDataFoodRequestToJSON(value['food']),
        'base_amount': value['baseAmount'],
        'base_unit': OpenDataUnitRequestToJSON(value['baseUnit']),
        'converted_amount': value['convertedAmount'],
        'converted_unit': OpenDataUnitRequestToJSON(value['convertedUnit']),
        'source': value['source'],
        'comment': value['comment'],
        'id': value['id'],
    };
}

