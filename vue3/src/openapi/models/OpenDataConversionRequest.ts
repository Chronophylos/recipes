/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { OpenDataFoodRequest } from './OpenDataFoodRequest';
import {
    OpenDataFoodRequestFromJSON,
    OpenDataFoodRequestFromJSONTyped,
    OpenDataFoodRequestToJSON,
} from './OpenDataFoodRequest';
import type { OpenDataUnitRequest } from './OpenDataUnitRequest';
import {
    OpenDataUnitRequestFromJSON,
    OpenDataUnitRequestFromJSONTyped,
    OpenDataUnitRequestToJSON,
} from './OpenDataUnitRequest';
import type { OpenDataVersionRequest } from './OpenDataVersionRequest';
import {
    OpenDataVersionRequestFromJSON,
    OpenDataVersionRequestFromJSONTyped,
    OpenDataVersionRequestToJSON,
} from './OpenDataVersionRequest';

/**
 * Adds nested create feature
 * @export
 * @interface OpenDataConversionRequest
 */
export interface OpenDataConversionRequest {
    /**
     * 
     * @type {OpenDataVersionRequest}
     * @memberof OpenDataConversionRequest
     */
    version: OpenDataVersionRequest;
    /**
     * 
     * @type {string}
     * @memberof OpenDataConversionRequest
     */
    slug: string;
    /**
     * 
     * @type {OpenDataFoodRequest}
     * @memberof OpenDataConversionRequest
     */
    food: OpenDataFoodRequest;
    /**
     * 
     * @type {string}
     * @memberof OpenDataConversionRequest
     */
    baseAmount: string;
    /**
     * 
     * @type {OpenDataUnitRequest}
     * @memberof OpenDataConversionRequest
     */
    baseUnit: OpenDataUnitRequest;
    /**
     * 
     * @type {string}
     * @memberof OpenDataConversionRequest
     */
    convertedAmount: string;
    /**
     * 
     * @type {OpenDataUnitRequest}
     * @memberof OpenDataConversionRequest
     */
    convertedUnit: OpenDataUnitRequest;
    /**
     * 
     * @type {string}
     * @memberof OpenDataConversionRequest
     */
    source: string;
    /**
     * 
     * @type {string}
     * @memberof OpenDataConversionRequest
     */
    comment?: string;
}

/**
 * Check if a given object implements the OpenDataConversionRequest interface.
 */
export function instanceOfOpenDataConversionRequest(value: object): boolean {
    if (!('version' in value)) return false;
    if (!('slug' in value)) return false;
    if (!('food' in value)) return false;
    if (!('baseAmount' in value)) return false;
    if (!('baseUnit' in value)) return false;
    if (!('convertedAmount' in value)) return false;
    if (!('convertedUnit' in value)) return false;
    if (!('source' in value)) return false;
    return true;
}

export function OpenDataConversionRequestFromJSON(json: any): OpenDataConversionRequest {
    return OpenDataConversionRequestFromJSONTyped(json, false);
}

export function OpenDataConversionRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): OpenDataConversionRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'version': OpenDataVersionRequestFromJSON(json['version']),
        'slug': json['slug'],
        'food': OpenDataFoodRequestFromJSON(json['food']),
        'baseAmount': json['base_amount'],
        'baseUnit': OpenDataUnitRequestFromJSON(json['base_unit']),
        'convertedAmount': json['converted_amount'],
        'convertedUnit': OpenDataUnitRequestFromJSON(json['converted_unit']),
        'source': json['source'],
        'comment': json['comment'] == null ? undefined : json['comment'],
    };
}

export function OpenDataConversionRequestToJSON(value?: OpenDataConversionRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'version': OpenDataVersionRequestToJSON(value['version']),
        'slug': value['slug'],
        'food': OpenDataFoodRequestToJSON(value['food']),
        'base_amount': value['baseAmount'],
        'base_unit': OpenDataUnitRequestToJSON(value['baseUnit']),
        'converted_amount': value['convertedAmount'],
        'converted_unit': OpenDataUnitRequestToJSON(value['convertedUnit']),
        'source': value['source'],
        'comment': value['comment'],
    };
}

