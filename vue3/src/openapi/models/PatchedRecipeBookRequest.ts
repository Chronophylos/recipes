/* tslint:disable */
/* eslint-disable */
/**
 * Tandoor
 * Tandoor API Docs
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { mapValues } from '../runtime';
import type { CustomFilterRequest } from './CustomFilterRequest';
import {
    CustomFilterRequestFromJSON,
    CustomFilterRequestFromJSONTyped,
    CustomFilterRequestToJSON,
} from './CustomFilterRequest';
import type { UserRequest } from './UserRequest';
import {
    UserRequestFromJSON,
    UserRequestFromJSONTyped,
    UserRequestToJSON,
} from './UserRequest';

/**
 * Adds nested create feature
 * @export
 * @interface PatchedRecipeBookRequest
 */
export interface PatchedRecipeBookRequest {
    /**
     * 
     * @type {string}
     * @memberof PatchedRecipeBookRequest
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedRecipeBookRequest
     */
    description?: string;
    /**
     * 
     * @type {Array<UserRequest>}
     * @memberof PatchedRecipeBookRequest
     */
    shared?: Array<UserRequest>;
    /**
     * 
     * @type {CustomFilterRequest}
     * @memberof PatchedRecipeBookRequest
     */
    filter?: CustomFilterRequest;
    /**
     * 
     * @type {number}
     * @memberof PatchedRecipeBookRequest
     */
    order?: number;
    /**
     * 
     * @type {number}
     * @memberof PatchedRecipeBookRequest
     */
    id?: number;
}

/**
 * Check if a given object implements the PatchedRecipeBookRequest interface.
 */
export function instanceOfPatchedRecipeBookRequest(value: object): boolean {
    return true;
}

export function PatchedRecipeBookRequestFromJSON(json: any): PatchedRecipeBookRequest {
    return PatchedRecipeBookRequestFromJSONTyped(json, false);
}

export function PatchedRecipeBookRequestFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedRecipeBookRequest {
    if (json == null) {
        return json;
    }
    return {
        
        'name': json['name'] == null ? undefined : json['name'],
        'description': json['description'] == null ? undefined : json['description'],
        'shared': json['shared'] == null ? undefined : ((json['shared'] as Array<any>).map(UserRequestFromJSON)),
        'filter': json['filter'] == null ? undefined : CustomFilterRequestFromJSON(json['filter']),
        'order': json['order'] == null ? undefined : json['order'],
        'id': json['id'] == null ? undefined : json['id'],
    };
}

export function PatchedRecipeBookRequestToJSON(value?: PatchedRecipeBookRequest | null): any {
    if (value == null) {
        return value;
    }
    return {
        
        'name': value['name'],
        'description': value['description'],
        'shared': value['shared'] == null ? undefined : ((value['shared'] as Array<any>).map(UserRequestToJSON)),
        'filter': CustomFilterRequestToJSON(value['filter']),
        'order': value['order'],
        'id': value['id'],
    };
}

