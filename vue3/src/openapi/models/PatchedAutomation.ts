/* tslint:disable */
/* eslint-disable */
/**
 * 
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { TypeEnum } from './TypeEnum';
import {
    TypeEnumFromJSON,
    TypeEnumFromJSONTyped,
    TypeEnumToJSON,
} from './TypeEnum';

/**
 * 
 * @export
 * @interface PatchedAutomation
 */
export interface PatchedAutomation {
    /**
     * 
     * @type {number}
     * @memberof PatchedAutomation
     */
    readonly id?: number;
    /**
     * 
     * @type {TypeEnum}
     * @memberof PatchedAutomation
     */
    type?: TypeEnum;
    /**
     * 
     * @type {string}
     * @memberof PatchedAutomation
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof PatchedAutomation
     */
    description?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedAutomation
     */
    param1?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedAutomation
     */
    param2?: string | null;
    /**
     * 
     * @type {string}
     * @memberof PatchedAutomation
     */
    param3?: string | null;
    /**
     * 
     * @type {number}
     * @memberof PatchedAutomation
     */
    order?: number;
    /**
     * 
     * @type {boolean}
     * @memberof PatchedAutomation
     */
    disabled?: boolean;
    /**
     * 
     * @type {number}
     * @memberof PatchedAutomation
     */
    readonly createdBy?: number;
}

/**
 * Check if a given object implements the PatchedAutomation interface.
 */
export function instanceOfPatchedAutomation(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function PatchedAutomationFromJSON(json: any): PatchedAutomation {
    return PatchedAutomationFromJSONTyped(json, false);
}

export function PatchedAutomationFromJSONTyped(json: any, ignoreDiscriminator: boolean): PatchedAutomation {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'id': !exists(json, 'id') ? undefined : json['id'],
        'type': !exists(json, 'type') ? undefined : TypeEnumFromJSON(json['type']),
        'name': !exists(json, 'name') ? undefined : json['name'],
        'description': !exists(json, 'description') ? undefined : json['description'],
        'param1': !exists(json, 'param_1') ? undefined : json['param_1'],
        'param2': !exists(json, 'param_2') ? undefined : json['param_2'],
        'param3': !exists(json, 'param_3') ? undefined : json['param_3'],
        'order': !exists(json, 'order') ? undefined : json['order'],
        'disabled': !exists(json, 'disabled') ? undefined : json['disabled'],
        'createdBy': !exists(json, 'created_by') ? undefined : json['created_by'],
    };
}

export function PatchedAutomationToJSON(value?: PatchedAutomation | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'type': TypeEnumToJSON(value.type),
        'name': value.name,
        'description': value.description,
        'param_1': value.param1,
        'param_2': value.param2,
        'param_3': value.param3,
        'order': value.order,
        'disabled': value.disabled,
    };
}

